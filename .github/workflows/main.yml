name: CI

on: [push, pull_request]

jobs:
  Server:
    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install Go
        uses: actions/setup-go@v2
        
      - name: Go modules Caching
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Test
        env:
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          DATABASE_URL: ${{secrets.DATABASE_URL_GITHUB}}
        run: go test ./tests
          
      - name: Production Deploy
        if: github.ref == 'refs/heads/master'
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'walletvisor'
          heroku_email: 'cobogue@gmail.com'
          appdir: "server"
        env:
          HD_JWT_SECRET: ${{secrets.JWT_SECRET}}


  Client:
      
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: client
          
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: npm packages cache
          uses: actions/cache@v2
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-

        - name: Install Dependencies
          run: npm install

        - name: Build
          run: npm run-script build

        - name: Production Env Variables
          if: github.ref == 'refs/heads/master'
          uses: netlify/actions/cli@master
          env:
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            NETLIFY_SITE_ID: 63133934-caeb-44c0-a475-e155ecb5450d
          with:
            args: env:set TEST2 holo
        
        - name: Production Deploy
          if: github.ref == 'refs/heads/master'
          uses: netlify/actions/cli@master
          env:
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            NETLIFY_SITE_ID: 63133934-caeb-44c0-a475-e155ecb5450d
          with:
            args: env:set SERVER_URL https://walletvisor.herokuapp.com; deploy --dir=client/build --prod